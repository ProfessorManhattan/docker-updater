{
  "name": "@megabytelabs/updater",
  "description": "A general-purpose Dockerfile project that includes Node.js, DockerSlim, and jq in a single container (only 45.865 MB compressed!)",
  "license": "MIT",
  "author": "Brian Zalewski <brian@megabyte.space> (https://megabyte.space)",
  "version": "0.0.29",
  "scripts": {
    "build": "run-s build:*",
    "build:latest": "docker build --build-arg BUILD_DATE=$(git show -s --format=%cI) --build-arg REVISION=$(git rev-parse HEAD) --build-arg VERSION=${npm_package_version} --tag megabytelabs/updater:latest --tag megabytelabs/updater:${npm_package_version} .",
    "build:slim": "docker-slim build --tag megabytelabs/updater:slim --http-probe=false --exec 'npm help | npx --help' --include-path '/etc/ssl/certs' --include-path '/usr/share/git-core/templates' --include-path '/usr/libexec/git-core/git-remote-https' --include-path '/usr/lib/libpcre2-8.so.0' --include-path '/usr/libexec/git-core/git-sh-i18n--envsubst' --include-path '/usr/bin/curl' --include-path '/usr/lib/libcurl.so.4' --include-path '/usr/lib/libcurl.so.4.7.0' --include-path '/usr/lib/libpcre2-8.so.0.10.1' --include-path '/usr/local/bin/docker-slim' --include-path '/usr/bin/jq' --include-path '/usr/lib/libonig.so.5' --include-path '/usr/lib/libonig.so.5.1.0' --include-path '/usr/bin/git' --include-path '/usr/libexec/git-core/git-submodule' --include-path '/usr/libexec/git-core/git-sh-setup' --include-path '/usr/libexec/git-core/git-sh-i18n' --include-path '/usr/bin/npx' --include-path '/bin/bash' --include-path '/usr/bin/npm' --include-path '/usr/lib/node_modules' --include-path '/usr/bin/node' --include-path '/bin/sed' megabytelabs/updater:latest && prettier --write slim.report.json",
    "build:slim-version": "docker-slim build --tag megabytelabs/updater:${npm_package_version}-slim --http-probe=false --exec 'npm help | npx --help' --include-path '/etc/ssl/certs' --include-path '/usr/share/git-core/templates' --include-path '/usr/libexec/git-core/git-remote-https' --include-path '/usr/lib/libpcre2-8.so.0' --include-path '/usr/libexec/git-core/git-sh-i18n--envsubst' --include-path '/usr/bin/curl' --include-path '/usr/lib/libcurl.so.4' --include-path '/usr/lib/libcurl.so.4.7.0' --include-path '/usr/lib/libpcre2-8.so.0.10.1' --include-path '/usr/local/bin/docker-slim' --include-path '/usr/bin/jq' --include-path '/usr/lib/libonig.so.5' --include-path '/usr/lib/libonig.so.5.1.0' --include-path '/usr/bin/git' --include-path '/usr/libexec/git-core/git-submodule' --include-path '/usr/libexec/git-core/git-sh-setup' --include-path '/usr/libexec/git-core/git-sh-i18n' --include-path '/usr/bin/npx' --include-path '/bin/bash' --include-path '/usr/bin/npm' --include-path '/usr/lib/node_modules' --include-path '/usr/bin/node' --include-path '/bin/sed' megabytelabs/updater:latest && prettier --write slim.report.json",
    "commit": "git-cz",
    "fix": "run-s fix:*",
    "fix:prettier": "prettier \"{*.json,*.sh,*.yml}\" --write",
    "fix:shellcheck": "shellcheck -f diff Dockerfile | git apply",
    "info": "npm-scripts-info",
    "postinstall": "husky install && run-s update",
    "prepare-release": "run-s update test build update test version",
    "publish": "run-s publish:*",
    "publish:login": "docker login",
    "publish:prepare": "npx lint-staged && run-s prepare-release && git push --follow-tags origin master && run-s build && git add slim.report.json && git commit -m 'chore(slim-report) Adding slim.report.json.' && git push origin master",
    "publish:publish": "docker push megabytelabs/updater:latest && docker push megabytelabs/updater:${npm_package_version}",
    "publish:publish-slim": "docker push megabytelabs/updater:slim && docker push megabytelabs/updater:${npm_package_version}-slim",
    "publish:readme": "docker pushrm megabytelabs/updater",
    "publish:readme-description": "SHORT_DESCRIPTION=$(cat .blueprint.json | jq '.dockerhub_description' | cut -d '\"' -f 2) && PACKAGE_SLUG=$(cat .blueprint.json | jq '.slug' | cut -d '\"' -f 2) && docker pushrm --short \"${SHORT_DESCRIPTION}\" megabytelabs/${PACKAGE_SLUG}",
    "scan": "run-s build scan:*",
    "scan:_login": "docker scan --accept-license --login",
    "scan:latest": "docker scan --file Dockerfile megabytelabs/updater:latest",
    "scan:slim": "docker scan --file Dockerfile megabytelabs/updater:slim",
    "shell": "docker run --cap-drop=ALL -it --rm megabytelabs/updater:latest /bin/sh",
    "shell:slim": "docker run --cap-drop=ALL -it --rm megabytelabs/updater:slim /bin/sh",
    "sizes": "docker images",
    "start": "run-s update",
    "test": "run-s test:*",
    "test:docker": "docker run -v ${PWD}:/work -w /work hadolint/hadolint:latest hadolint Dockerfile",
    "test:preprettier": "if [ -f slim.report.json ]; then prettier --write slim.report.json; fi && if [ -f .blueprint.json ]; then prettier --write .blueprint.json; fi",
    "test:prettier": "prettier \"{*.json,*.sh,*.yml}\" --list-different",
    "test:shellcheck": "find . -type d \\( -name .cache -o -name .git -o -name .husky -o -name .modules -o -name node_modules \\) -prune -false -o -name .start.sh -prune -o -type f -name \\*.sh -print0 | xargs -0 -r -n1 shellcheck",
    "update": "bash .start.sh && cp ./.modules/dockerfile/.start.sh .start.sh",
    "version": "standard-version -a --no-verify"
  },
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "devDependencies": {
    "@megabytelabs/prettier-config": "^1.2.17",
    "consola": "^2.15.3",
    "cspell": "^5.3.3",
    "cz-conventional-changelog": "^3.3.0",
    "husky": "^5.1.1",
    "lint-staged": "^10.5.4",
    "npm-run-all": "^4.1.5",
    "npm-scripts-info": "^0.3.9",
    "prettier": "^2.1.1",
    "prettier-package-json": "^2.1.3",
    "prettier-plugin-sh": "^0.6.0",
    "shellcheck": "^1.0.0",
    "standard-version": "^9.0.0"
  },
  "funding": [
    {
      "type": "opencollective",
      "url": "https://opencollective.com/megabytelabs"
    },
    {
      "type": "patreon",
      "url": "https://www.patreon.com/ProfessorManhattan"
    }
  ],
  "lint-staged": {
    "**/*.{json,sh,yml}": [
      "prettier --write"
    ],
    "package.json": [
      "prettier-package-json --write"
    ]
  },
  "prettier": "@megabytelabs/prettier-config",
  "scripts-info": {
    "build": "Build the regular Docker image and then build the slim image",
    "build:latest": "Build the regular Docker image",
    "build:slim": "Build a compact Docker image with DockerSlim",
    "commit": "The preferred way of running git commit (instead of git commit, we prefer you run 'npm run commit' in the root of this repository)",
    "fix": "Automatically fix formatting errors",
    "info": "Logs descriptions of all the npm tasks",
    "prepare-release": "Updates the CHANGELOG with commits made using 'npm run commit' and updates the project to be ready for release",
    "publish": "Creates new release(s) and uploads the release(s) to DockerHub",
    "scan": "Scans images for vulnerabilities",
    "shell": "Run the Docker container and open a shell",
    "shell:slim": "Runs the Docker slim image container and open a shell",
    "sizes": "List the sizes of the Docker images on the system",
    "test": "Validates the Dockerfile, tests the Docker image, and performs project linting",
    "update": "Runs .start.sh to automatically update meta files and documentation",
    "version": "Used by 'npm run prepare-release' to update the CHANGELOG and app version"
  },
  "standard-version": {
    "scripts": {
      "prerelease": "git add --all"
    }
  }
}
